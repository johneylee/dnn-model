1. data 폴더 구성이 끝나면 noisey data 를 뽑아주는 코드: generate_noisy_data.py 를 실행
	python generate_noisy_data.py [mode]
	: mode에는 'train' , 'devel', 'test'
        : 현재 코드는 한 noise 파일의 80% 를 train, devel 로 사용하고 20% 를 test dB로 사용했다.

2. data 를 generate 하고나면 input 과 target 의 feature 를 뽑아주는 코드: extract_features.py 를 실행
	python extract_features.py [type_name] [dir_name] [output_name]
	: type_name 에는 'logmag_noisy' , 'logmag_clean' , 'logmag_noise', 'ibm', 'irm'
	: dir_name 에는 '../data/speech/train' , '../data/speech/devel'
	: output_name 에는 'feature_data/train_input' 이런식으로 feature_data 폴더 아래에 자유롭게 이름 설정

3. feature 뽑으면 다음으로 setting 해주는 코드: config.py 에 feqture_data 에 있는 input과 target 목록을 입력
   job_type, job_dir, mode 를 수정(그 아래 파라미터는 바꿔가며 실험 수행)
   네트워크를 통해 learning 시켜주는 코드: train_network.py 를 실행
	python train_network.py
	: train 된 network 는 job 폴더에 저장된다. code 자체에 가장 loss 값이 작은 모델이 따로 저장되도록 되어있다.

4. tarin 모델을 이용해 test 시키기 위해 사용되는 코드: enhance_speech.py
	python enhance_speech.py [trained model name] [mode] [address input wav]
	: ex) python enhance_speech.py job/model_irm irm xxx.wav
     1) 파일을 여러개 test 하고자 할때 batch_file 폴더에 있는 쉘 파일을 이용해 batch 로 돌릴 수 있다: enh_batch_test.sh
	bash ~~.sh
     2) 전체 file enhance 시키기 위한 코드: enhance_speech_batch.py
	python enhance_speech_batch.py [path/tarined model name] [mode]

5. Compute pesq: score_PESQ.py
	: 아직 상대경로와 전체 노이스 타입에 대한 평균 구하는 부분은 해결 못함

6. Compute STOI, SDR(MATLAB): ~/Downloads/matlab/Objective_test/pesq2-matlab objective_measure.m
	: 이부분도 상대경로 문제와 전체 평균은 해결 못함
